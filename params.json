{
  "name": "HunnyPotr by Recce7",
  "tagline": "Technical Documentation For The Easily Extensible Honey Pot",
  "body": "# Purpose of Project\r\nCreate an easy-install honey pot that any Security Engineer or Systems Administrator can write plugins that mimic applications or services running on their network.  The honey pot needs to display critical data to the user in an easy to read and navigate format.  This tool is useful to show what kind of attacks are going on and verify that the actual services the plugins represent are guarded appropriately.\r\n\r\n\r\n# Features and Libraries Used\r\n\r\n### Designed to Run on [RaspberryPi Zero](https://www.raspberrypi.org/products/pi-zero/)\r\nApplication built around running on a RaspberryPi Zero to make it easy to deploy in any physical environment as well as being cost efficient.  Packages for both [Debian](https://www.debian.org/) and [CentOS](https://www.centos.org/) available to increase flexibility for users.\r\n\r\n### Displaying Reporting Data with [Grafana](http://grafana.org/)\r\nHoneyPotR will come packaged with some basic graphs and output configured by default. This allows any user to get up and running with HoneyPotR quick and easy by providing pre-built graphs so that information can be displayed on real time attacks immediately.  Grafana also makes it very easy to build your own graphs in order to display any metrics that fit your needs.\r\n![](recce7.github.io/images/grafana1.png)\r\n![](recce7.github.io/images/grafana2.png)\r\n\r\n### Using [Docker](https://www.docker.com/) for Builds and CI Management\r\nDocker makes it easy to develop, test, build and manage a Continuous Integration development cycle.  By using Docker we have given our clients the ability to run HoneyPotR on any platform.  If running a Raspberry Pi does no fit your needs, Docker allows you to run our Debian and CentOS packages on any system such as Microsoft and Apple OS X.  Docker can also be used to deploy Grafana on a machine other than the Raspberry Pi.\r\n\r\n### Passive OS Fingerprinting with [P0f](http://lcamtuf.coredump.cx/p0f3/)\r\nBy passively listening to the TCP Handshake between our honey pot and the attacker we are able to pull the following data:\r\n* Time that the attacker connected and disconnected\r\n* Amount of connections the attacker currently has on HoneyPotR\r\n* Detected remote Operating System, version and accuracy estimated system\r\n* HTTP Client if available, i.e. browser, version and user agent; curl version; wget version\r\n* Network Link\r\n* Distance, amount of hops made to reach HoneyPotR\r\n* Language\r\n* Uptime\r\n\r\n### Geoip\r\nUsing a simple cURL call to [ipinfo.io]{http://ipinfo.io} we are able to gather useful information regarding the location of the attacker and the type of service they may be using.  We are then mapping the information from this call to a world map that is able to display the location of all attacks made on HoneyPotR.  This world map is accessible via an endpoint in HoneyPotR's REST API so that a user is able to pass a days GET parameter to narrow down the amount of points showing on the map.\r\n\r\n### REST API\r\nUsers will have access to reporting data through a RESTful API.  Attack data resources are represented as JSON Arrays which makes it easy to narrow down and display exactly what information a user may want to access using HTTP GET calls.  This API allows flexibility for our clients to get reporting data however fits best for their environment.  For example if a client already had a GUI for reporting traffic on their network it would be easy for them to make calls to HoneyPotR via the REST API without the need to use Grafana.\r\n\r\n\r\n\r\n# How It Works\r\n\r\n### Framework\r\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n\r\n### Plugins\r\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n\r\n### Data Management\r\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n\r\n### Data Reporting\r\nAs mentioned in the features section we provide a REST API to allow users to integrate data from our reporting server to their own user interface systems.\r\n\r\n#### Setup RESTful Report Server\r\n* Navigate to the directory where HoneyPotR was installed\r\n* Edit the `global.cfg` file located in `./config/` so that the Database `path` points to where the database is installed, note the example below:\r\n```\r\n[Database]\r\npath = honeyDB/honeyDB.sqlite\r\ndatetime.name = eventDateTime\r\npeerAddress.name = peerAddress\r\nlocalAddress.name = localAddress\r\n```\r\n* Locate the ReportServer section and edit properties to fit your needs, note the example below:\r\n```\r\n[ReportServer]\r\nreportserver.logName = reportserver.log\r\nreportserver.logLevel = DEBUG\r\nreportserver.host = 192.168.1.16\r\nreportserver.port = 8080\r\n```\r\n* To start the report server navigate back to the installed directory and run ```sudo ./startReportingServer.sh```\r\n\r\nIf the user decides that Grafan fits their needs they are able to use the default boards that come standard with HoneyPotR, or create their own.\r\n\r\n#### Setup Grafan Reporting Graphs and Boards\r\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n\r\n\r\n\r\n# How to Install and Run HunnyPotR\r\n**_Installing by RPM or are we just using git clone and manually setting environment up, then running authbind.sh_**\r\n\r\n\r\n# Instructions for Developing Plugins\r\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n\r\n### API\r\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n\r\n### Config File Entries\r\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n\r\n### Data Formatting\r\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n\r\n\r\n## Authors and Contributors\r\nMatt @howard-roark, Dina @dsteeve, Charlie @belmontrevenge, Ben @benphillips989, Jesse @jnels124, Randy  @rsoren514, Zach\r\n@zkuhns\r\n\r\n## Support or Contact\r\nHave questions or need support? Please contact any of the above contributors at their GitHub pages.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}